{
    "projects" : [
        {
            "name" : "LC2K Linker",
            "date" : "190312",
            "tags" : [
                "ASM",
                "C",
                "School"
            ],
            "description" : "For this project I modified the assembler I created in the “LC2K Assembler/Simulator” project (LC2K is a made up simple ISA for academic purposes) to output object files for assembly files.  I then developed a linker in C to link the object files together into a machine code file executable by an LC2K CPU. The objective of this modification was to allow defining subroutines in different files, and sharing global addresses/data between subroutines. There was also a part of this project which involved creating an recursive combination subroutine in LC2K assembly, and running it along with a main function. Received a full score on all parts of the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "LC2K Assembler/Simulator",
            "date" : "190205",
            "tags" : [
                "ASM",
                "C",
                "School"
            ],
            "description" : "For this project I created an assembler to assemble LC2K (LC2K is a made up simple ISA for academic purposes) assembly code into machine code. Then I made a simulator to load the machine code into memory and execute it to LC2K specifications. These components were written in standard C. Part of the assignment was to create test cases for these programs and make an efficient multiplication algorithm for positive 16 bit integers in LC2K assembly (LC2K does not support multiplication instructions). I received a full score for the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Chess AI",
            "date" : "181228",
            "tags" : [
                "Swift",
                "AI",
                "iOS"
            ],
            "description" : "This is a personal project where I developed an iOS chess frontend in Swift with SpriteKit and an AI model to play against a human player. I researched different chess mathematical evaluation models to create a maximization function for the AI player, to allow it to pick the best possible moves. This model considers different aspects like piece development, material advantages, game stages and more. The current model uses a variation of the minimax algorithm along with this maximization function. You can view the <a href=\"https://github.com/gregoryyoung2/chess\" target=\"_blank\">full source code on my Github</a>, feel free to contribute and build it to try it out.",
            "link-name" : "Github",
            "link" : "https://github.com/gregoryyoung2/chess"
        },
        {
            "name" : "Pokemon",
            "date" : "181211",
            "tags" : [
                "C++",
                "School"
            ],
            "description" : "This project was a Pokemon themed graph project, spanning three parts. Part one required a C++ implementation of Prim’s algorithm in order to find a minimum spanning tree of a dense graph with up to 50,000 vertices. Part two required a C++ traveling sales person problem estimation, which could estimate a TSP solution for a dense graph with 50,000 vertices in around 10 seconds. Part three required implementation of a branch and bound algorithm to find a perfect TSP solution for a dense graph with up to 40 vertices. Received a full score on the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "SillyQL",
            "date" : "181120",
            "tags" : [
                "C++",
                "School"
            ],
            "description" : "I developed a relational database operable with a simplified structured query language (SillyQL). Project learning goals were to appropriately use different types of dictionary data structures (hash map, binary search tree). Project had to meet time and memory complexity constraints. Received a full score on the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Error Correcting Codes",
            "date" : "181119",
            "tags" : [
                "C++",
                "Math",
                "School"
            ],
            "description" : "I worked with a team of two other students, where we studied an application of linear algebra: error correcting codes. We developed a program in C++ to receive a base 2 encoded ascii message, perform a parity check on the received stream, resolve any errors which occurred in transmission, and then decode it and print result.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Mine Escape",
            "date" : "181010",
            "tags" : [
                "C++",
                "School"
            ],
            "description" : "I developed an algorithm to find an escape route through a mine under time and memory constraints. The mine consisted of a two dimensional discrete field of pieces of rock to mine through. Each rock had a certain difficulty to mine. The main learning goal of this project was the use of a priority queue to mine through the easiest to mine rocks first. Another component of this project was to implement a variety of priority queues. The least trivial was implementing one based on a <a href=\"https://en.wikipedia.org/wiki/Pairing_heap\" target=\"_blank\">Pairing Heap</a>. Received a full score on the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Letterman",
            "date" : "180927",
            "tags" : [
                "C++",
                "School"
            ],
            "description" : "I developed an algorithm to input one word and attempt to morph it into another word given a list of usable words and certain constraints. Learning goals of this project were to perform depth and breadth first searches, utilizing appropriate data structures (stack, queue). Project had to meet time and memory constraints. Received a full score on the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Lighting API",
            "date" : "180801",
            "tags" : [
                "C++",
                "24G"
            ],
            "description" : "I developed a high level C++ framework to interface with <a href=\"https://en.wikipedia.org/wiki/DMX512\" target=\"_blank\">DMX</a> controlled lights. Also developed bindings for the framework in Python and Node.js for simple integration with other applications.  Supported multiple serial outputs and DMX over IP outputs. Implemented framework in the company’s internal bowling alley to control fun lights and sync them with the bowling game. Framework was able to easily control thousands of individually addressable LED pixels, and including a realtime effects engine. The goal of this was to make it easy to integrate conventional effect lights with digital experiences.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Bluetooth Network Stack",
            "date" : "180801",
            "tags" : [
                "JS",
                "Swift",
                "24G"
            ],
            "description" : "I developed a simple protocol to communicate over 802.15.1 using GATT profile. Framework was able to integrate into Node.js applications, and native iOS applications. Made it very easy for devices to connect and transmit messages between them. I also worked to port this to some small micro controllers for miniaturization purposes. The goal of this was the implement the framework into wireless custom made remotes and communicate with a server for a digital experience.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Augmented Reality Room Scheduler",
            "date" : "180701",
            "tags" : [
                "Swift",
                "iOS",
                "24G"
            ],
            "description" : "I developed an application utilizing ARKit for iOS. The user can point their camera at any conference room in the office, and it will detect the specific conference room based on visual and location data. Then, it will render the availability of the conference room in AR space, based on the company’s internal room scheduling database. The goal of this was to research capabilities of ARKit image recognition, and to encourage employees to use the room scheduler in a fun way.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Augmented Reality Ping Pong",
            "date" : "180701",
            "tags" : [
                "Swift",
                "iOS",
                "24G"
            ],
            "description" : "I developed an AR game experience using ARKit for iOS. This game is similar to Atari Pong. I utilized the SpriteKit and SceneKit frameworks to render a pong game in AR space. I also developed a custom physics engine. The game supported touch, and motion controls for immersion in the AR experience. It also allowed playing against a computer player I designed. The goal of this game was to research multi user AR experiences, and other ARKit 2.0 features.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Google Next: The Suite Life",
            "date" : "180601",
            "tags" : [
                "JS",
                "24G"
            ],
            "description" : "I developed a backend in Node.js for a digital experience displayed on the floor at Google Next 2018. The goal of this experience was to demonstrate the effectiveness of GSuite in the workplace. As users went through with the experience on the frontend, my backend kept track of their progress using web sockets and controlled hundreds of color changing lights to match their progress in the game.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Facial Recognition API",
            "date" : "180501",
            "tags" : [
                "24G"
            ],
            "description" : "I worked on a team with 3 other interns to develop an API which made it easy to maintain a database matching faces to names (and other data), and easily lookup names based on an image of someones face. I primarily worked on the backend, which included training the model and correcting incorrect input. We also developed a frontend demonstration of the API in use. Potential uses for this API are a loosely security login system for games, and detecting faces from security footage.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Droppo Bottle",
            "date" : "171201",
            "tags" : [
                "C++",
                "School"
            ],
            "description" : "I lead a team of 4 other students to engineer a water bottle which recommends water consumption. It tracked a variety of biometrics to suggest a base amount, and then subtracted from that amount as the user consumes water through the bottle. We went through a variety of design steps in order to create an initial prototype. The prototype utilized a micro controller along with physical sensors to keep track of the water exiting the bottle. We received an A on the project.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "You In Space",
            "date" : "170601",
            "tags" : [
                "C#",
                "Unity",
                "School"
            ],
            "description" : "I co-lead a team of 6 other students to develop a 2D side scrolling platformer game with 3D graphics. The concept of the game was to allow a player to customize their character, and then play through various levels as that character. We implemented the ability for the player to shoot enemies, and we implemented enemies for the player to avoid.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "DIYDIY",
            "date" : "170201",
            "tags" : [
                "PHP",
                "Web"
            ],
            "description" : "I lead a team of 3 other students to create a website for a web design competition. We developed a website to host do-it-yourself (DIY) articles. This site allowed users to submit their own content, and interact with other users’ content (rate, comment, share, follow, etc). We had a moderation system to verify the quality of the submitted content, and to select high quality content to be featured. At its peak, the site had over 1000 registered users, with around 150 submitted articles.",
            "link-name" : null,
            "link" : null
        },
        {
            "name" : "Unlimited Launcher",
            "date" : "150106",
            "tags" : [
                "C#",
                "Desktop"
            ],
            "description" : "I worked on a small multidisciplinary team to develop a launcher for a free to play video game. The official launcher did not offer basic functionality like remembering the users password. The first feature I implemented was remembering the password, and we developed a way to encrypt it and store it locally. We also added features such as easily installing modifications to the game through the launcher, and sharing news on the game right within the launcher.",
            "link-name" : null,
            "link" : null
        }
    ]
}